{"version":3,"sources":["components/List.js","components/Input.js","components/TodoList.js","index.js"],"names":["List","this","props","renderTodos","style","color","Component","Input","htmlFor","id","ref","inp","input","value","inpValue","type","onChange","handleChange","onClick","addTodo","TodoList","hc","ev","setState","target","state","todos","title","done","delTodo","i","filter","item","index","localStorage","setItem","JSON","stringify","toggle","newTodos","parse","rt","map","todo","checked","getItem","className","ReactDOM","render","document","getElementById"],"mappings":"6KAqBeA,E,uKAlBX,OACE,6BACE,8DACQ,4BACE,4BACGC,KAAKC,MAAMC,aAAY,KAGpC,wDACQ,wBAAIC,MAAO,CAACC,MAAiB,UAC3B,4BACGJ,KAAKC,MAAMC,aAAY,U,GAbzBG,aCmBJC,E,uKAjBD,IAAD,OACL,OACI,6BACI,2BAAOC,QAAQ,OAAf,YACA,2BAAOC,GAAG,MAAOC,IACf,SAAAC,GAAG,OAAE,EAAKC,MAAQD,GAEpBE,MAAOZ,KAAKC,MAAMY,SAClBC,KAAK,OACDC,SAAUf,KAAKC,MAAMe,eAGzB,4BAAQC,QAASjB,KAAKC,MAAMiB,SAA5B,iC,GAbIb,aCqGLc,EAlGf,kDACI,WAAYlB,GAAO,IAAD,8BACd,cAAMA,IAUVmB,GAAG,SAACC,GACD,EAAKC,SAAS,CAACT,SAASQ,EAAGE,OAAOX,SAZnB,EA6BlBM,QAAU,WACkB,IAArB,EAAKM,MAAMX,WAGd,EAAKS,SAAS,CACVG,MAAM,CACF,CACIC,MAAM,EAAKF,MAAMX,SACjBc,MAAK,IAHR,mBAKE,EAAKH,MAAMC,UAGtB,EAAKH,SAAS,CAACT,SAAS,OA1CV,EA4ClBe,QAAU,SAACC,GACP,EAAKP,SAAS,CACVG,MAAM,EAAKD,MAAMC,MAAMK,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOH,OACrD,WACFI,aAAaC,QACT,QACAC,KAAKC,UAAU,EAAKZ,MAAMC,YAlDhB,EAsDlBY,OAAS,SAACL,GACN,IAAIM,EAAWH,KAAKI,MAAMJ,KAAKC,UAAU,EAAKZ,MAAMC,QACpDa,EAASN,GAAOL,MAAQW,EAASN,GAAOL,KACxC,EAAKL,SAAS,CACVG,MAAMa,KA1DI,EA6DlBE,GAAK,SAACb,GACF,OAAO,EAAKH,MAAMC,MAAMgB,KAAI,SAACC,EAAKb,GAC9B,GAAGF,IAAOe,EAAKf,KACf,OAAO,4BACH,2BACAV,QAAS,kBAAI,EAAKoB,OAAOR,IACzBc,QAAShB,EACTb,KAAK,aACL,8BAAO4B,EAAKhB,OACZ,4BACAT,QAAS,kBAAI,EAAKW,QAAQC,KAD1B,qBApER,EAAKL,MAAO,CACRX,SAAS,GACTY,MAAM,CACF,CAACC,MAAM,IAAIC,MAAK,GAChB,CAACD,MAAM,IAAIC,MAAK,KANV,EADtB,gEAgBQ,IAAIF,EAAQQ,aAAaW,QAAQ,SAC9BnB,GACCzB,KAAKsB,SAAS,CACVG,MAAMU,KAAKI,MAAMd,OAnBjC,2CA4BQ,OAJAQ,aAAaC,QACT,QACAC,KAAKC,UAAUpC,KAAKwB,MAAMC,SAEvB,IA5Bf,+BA8Ec,IAAD,EACiBzB,KAAKwB,MAArBC,EADD,EACCA,MAAMZ,EADP,EACOA,SACDY,EAAMK,QAAO,SAAAC,GAAI,OAAGA,EAAKJ,QAEpC,OACI,yBAAKkB,UAAU,YACX,kBAAC,EAAD,CACIhC,SAAUA,EACVK,QAAWlB,KAAKkB,QAChBO,MAAOA,EACPT,aAAgBhB,KAAKoB,KAEzB,kBAAC,EAAD,CAAMlB,YAAaF,KAAKwC,GACpBf,MAAOA,SA3F3B,GAA8BpB,aCC9ByC,IAASC,OACP,6BAAK,kBAAC,EAAD,OACLC,SAASC,eAAe,U","file":"static/js/main.d73ae72b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nclass List extends Component {\n  render() {\n    return (\n      <div>\n        <h1>正在进行中</h1>\n                <ul>\n                  <li>\n                    {this.props.renderTodos(false)}\n                  </li>\n                </ul>\n        <h1>已经完成</h1>\n                <ul style={{color:3>21?'red':'green'}}>\n                  <li>\n                    {this.props.renderTodos(true)}\n                  </li>\n                </ul>\n      </div>\n    )\n  }\n}\nexport default List;\n","import React, { Component } from 'react'\n\nclass Input extends Component {\n    render() {\n        return (\n            <div>\n                <label htmlFor=\"inp\">Todolist</label>\n                <input id='inp'  ref={\n                  inp=>this.input = inp\n                } \n                value={this.props.inpValue}   \n                type=\"text\"\n                    onChange={this.props.handleChange}\n                    />\n                \n                <button onClick={this.props.addTodo}>添加项目</button>\n            </div>\n        )\n    }\n}\nexport default Input;\n","import React, { Component } from 'react'\nimport List from './List';\nimport Input from './Input';\n\n  \nexport class TodoList extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            inpValue:'',\n            todos:[\n                {title:'1',done:false},\n                {title:'2',done:true},\n            \n        ]\n        }\n    }\n    hc=(ev)=>{\n       this.setState({inpValue:ev.target.value})\n    }\n    componentDidMount(){\n        let todos = localStorage.getItem('todos');\n        if(todos){\n            this.setState({\n                todos:JSON.parse(todos),\n            })\n        }\n    }\n    componentDidUpdate(){\n        localStorage.setItem(\n            'todos',\n            JSON.stringify(this.state.todos)\n        )\n        return true;\n    }\n    addTodo = ()=>{\n        if(this.state.inpValue==''){\n            return;\n        }\n        this.setState({\n            todos:[\n                {\n                    title:this.state.inpValue,\n                    done:false,\n                },\n                ...this.state.todos\n            ]\n        })\n        this.setState({inpValue:''})\n    }\n    delTodo = (i)=>{\n        this.setState({\n            todos:this.state.todos.filter((item,index)=>index!=i)\n        },()=>{\n        localStorage.setItem(\n            'todos',\n            JSON.stringify(this.state.todos)\n        )\n        });\n    }\n    toggle = (index)=>{\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\n        newTodos[index].done = !newTodos[index].done;\n        this.setState({\n            todos:newTodos\n        })\n    }\n    rt = (done)=>{\n        return this.state.todos.map((todo,i)=>{\n            if(done===todo.done){\n            return <li>\n                <input \n                onClick={()=>this.toggle(i)}\n                checked={done} \n                type=\"checkbox\"/>\n                <span>{todo.title}</span>\n                <button \n                onClick={()=>this.delTodo(i)}>删除</button>\n            </li>\n            }\n        }\n        )\n     } \n    render() {\n        const{todos,inpValue}=this.state;\n        let arr1 = todos.filter(item=>!item.done)\n        \n        return (\n            <div className=\"TodoList\">\n                <Input \n                    inpValue={inpValue}\n                    addTodo = {this.addTodo}\n                    todos={todos}\n                    handleChange = {this.hc}\n                        />\n                <List renderTodos={this.rt}\n                    todos={todos}\n                    />\n                \n            </div>\n        )\n    }\n}\nexport default TodoList\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './components/TodoList';\n\n\n\nReactDOM.render(\n  <div><TodoList/></div>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}